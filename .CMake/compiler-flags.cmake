if(CMAKE_C_COMPILER_ID MATCHES "Clang")
    add_compile_options(-Werror)
    add_compile_options(-Wall)
    add_compile_options(-Wextra)
    add_compile_options(-Wpedantic)
    #add_compile_options(-Wreserved-id-macro)
    #add_compile_options(-Wbad-function-cast)
    # valid BIKE code sets this off
    add_compile_options(-Wno-missing-braces)
    add_compile_options(-fvisibility=hidden)
    if(CMAKE_BUILD_TYPE STREQUAL "Debug")
        add_compile_options(-g3)
        add_compile_options(-fno-omit-frame-pointer)
    elseif(CMAKE_BUILD_TYPE STREQUAL "Sanitizer")
        add_compile_options(-g3)
        add_compile_options(-fno-omit-frame-pointer)
        if(SANITIZER_TYPE STREQUAL "Address")
            add_compile_options(-fno-optimize-sibling-calls)
            add_compile_options(-fsanitize-address-use-after-scope)
            add_compile_options(-fsanitize=address)
        elseif(SANITIZER_TYPE STREQUAL "Memory")
            add_compile_options(-fsanitize=memory)
        elseif(SANITIZER_TYPE STREQUAL "MemoryWithOrigins")
            add_compile_options(-fsanitize=memory)
            add_compile_options(-fsanitize-memory-track-origins)
        elseif(SANITIZER_TYPE STREQUAL "Undefined")
            add_compile_options(-fsanitize=undefined)
            if(EXISTS "${BLACKLIST_FILE}")
                add_compile_options(-fsanitize-blacklist=${BLACKLIST_FILE})
            endif()
        elseif(SANITIZER_TYPE STREQUAL "Thread")
            add_compile_options(-fsanitize=thread)
        elseif(SANITIZER_TYPE STREQUAL "Leak")
            add_compile_options(-fsanitize=leak)
        endif()
    elseif(CMAKE_BUILD_TYPE STREQUAL "Optimized")
        add_compile_options(-O3)
        add_compile_options(-march=native)
        add_compile_options(-fomit-frame-pointer)
    else() #Build type = Generic
        add_compile_options(-O3)
        add_compile_options(-fomit-frame-pointer)
    endif()
elseif(CMAKE_C_COMPILER_ID STREQUAL "GNU")
    add_compile_options(-Werror)
    add_compile_options(-Wall)
    add_compile_options(-Wextra)
    add_compile_options(-Wpedantic)
    add_compile_options(-Wstrict-prototypes)
    add_compile_options(-Wshadow)
    add_compile_options(-Wformat=2)
    add_compile_options(-Wfloat-equal)
    add_compile_options(-Wwrite-strings)
    add_compile_options(-fvisibility=hidden)
    if(CMAKE_C_COMPILER_VERSION VERSION_LESS "5")
        # GCC 4.9 erroneously reports warnings for certain valid code in BIKE
        # https://stackoverflow.com/questions/13746033/how-to-repair-warning-missing-braces-around-initializer
        add_compile_options(-Wno-missing-braces)
        add_compile_options(-Wno-missing-field-initializers)
    endif()
    if(CMAKE_BUILD_TYPE STREQUAL "Debug")
        add_compile_options (-Wstrict-overflow=4)
        add_compile_options(-ggdb3)
    elseif(CMAKE_BUILD_TYPE STREQUAL "Optimized")
        add_compile_options(-O3)
        add_compile_options(-march=native)
        add_compile_options(-fomit-frame-pointer)
        add_compile_options(-fdata-sections)
        add_compile_options(-ffunction-sections)
        if (CMAKE_SYSTEM_NAME STREQUAL "Darwin")
            add_compile_options(-Wl,-dead_strip)
        else ()
            add_compile_options(-Wl,--gc-sections)
        endif ()
    else() #Build type = Generic
        add_compile_options(-D_FORTIFY_SOURCE=2)
        add_compile_options(-O3)
        add_compile_options(-fomit-frame-pointer)
        add_compile_options(-fdata-sections)
        add_compile_options(-ffunction-sections)
        if (CMAKE_SYSTEM_NAME STREQUAL "Darwin")
            add_compile_options(-Wl,-dead_strip)
        else ()
            add_compile_options(-Wl,--gc-sections)
        endif ()
    endif()
elseif(CMAKE_C_COMPILER_ID STREQUAL "MSVC")
    #add_compile_options(/WX)
    add_compile_options(/Wall)
endif()
